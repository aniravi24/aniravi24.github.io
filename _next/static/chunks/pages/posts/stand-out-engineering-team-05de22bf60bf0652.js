(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[579],{2965:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/stand-out-engineering-team",function(){return a(7184)}])},7184:function(e,t,a){"use strict";a.r(t),a.d(t,{useTOC:function(){return s}});var n=a(2676),o=a(5131),i=a(9075),r=a(8219);function s(e){return[{value:"1. Unique language choice",id:"1-unique-language-choice",depth:3},{value:"2. Unique approach to using “boring” tools",id:"2-unique-approach-to-using-boring-tools",depth:3},{value:"3. Compensation",id:"3-compensation",depth:3},{value:"4. Autonomy",id:"4-autonomy",depth:3},{value:"5. Unique problems",id:"5-unique-problems",depth:3}]}t.default=(0,o.c)(function(e){let{toc:t=s(e)}=e,a={a:"a",h3:"h3",hr:"hr",p:"p",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:"As I’ve been reflecting on work I’ve done that I enjoyed vs work that I didn’t, one thing has consistently stood out to me. Each opportunity had something that stood out about the engineering or product culture. The thing is, there are a lot of different levers you can pull here, and it’s interesting seeing teams that don’t pull any of these levers (the most boring jobs to work). The following are a (non-exhaustive) list of ways an engineering team stands out:"}),"\n",(0,n.jsx)(a.h3,{id:t[0].id,children:t[0].value}),"\n",(0,n.jsxs)(a.p,{children:["Some companies stand out because of the tooling they use to build their technology, which has a huge influence on a lot of other decisions, as well as the people who are attracted to your team. For example, a company like ",(0,n.jsx)(a.a,{href:"https://bun.sh/",children:"Bun"})," uses Zig, an unconventional language choice. A good friend of mine loves ReasonML/OCaml. It’s not that you have to have a large audience of people who agree with your tooling choices - but having some opinion gets you to stand out for the right engineer."]}),"\n",(0,n.jsx)(a.h3,{id:t[1].id,children:t[1].value}),"\n",(0,n.jsxs)(a.p,{children:["Many companies pride themselves on using “boring” technology - they don’t want to use anything too new, just things that are tried and tested. A company that sticks out meaningfully amongst the sea of companies like this is ",(0,n.jsx)(a.a,{href:"https://zerodha.tech/",children:"Zerodha"}),". They self-host and use open-source software for their entire technology stack. When I say everything, I mean literally everything, including their HR systems to manage their employees. It’s a incredibly rare but principled approach to building technology, and one that most wouldn’t recommend for a variety of reasons, but they made it work. They have a product team of ~30 engineers and do $800M in revenue, entirely bootstrapped (as of 2023), and almost no PMs or designers."]}),"\n",(0,n.jsx)(a.h3,{id:t[2].id,children:t[2].value}),"\n",(0,n.jsx)(a.p,{children:"Companies like Netflix stand out because they project a culture of high-performance, high-pay. Others may offer unusually high equity. How effective this is on its own to attract great engineering talent is up for debate, but it’s certainly a useful lever for those who can pull it."}),"\n",(0,n.jsx)(a.h3,{id:t[3].id,children:t[3].value}),"\n",(0,n.jsx)(a.p,{children:"I’ve worked at a startup that offered me significant autonomy, almost to a fault. Due to that, I learned so much about building products. When you give people who deeply desire self-actualization the proper space to do so, it’s surprising the magic you can create with the right guardrails in place."}),"\n",(0,n.jsx)(a.h3,{id:t[4].id,children:t[4].value}),"\n",(0,n.jsxs)(a.p,{children:["Some products are built based on solving things that have never been solved in history, or otherwise extremely challenging problems. Like Sam Altman says, ",(0,n.jsx)(a.a,{href:"https://youtu.be/GiwpsoTT3p8",children:"it’s easier to build a hard company than an easy company"}),". Sometimes interesting problems are hidden in plain sight, and it might require some communication on your part to show engineers why it’s an interesting problem. A lot of seemingly boring problems (e.g. something to do with taxes) can easily be written off if people don’t get a strong sense of why it might be interesting."]}),"\n",(0,n.jsx)(a.hr,{}),"\n",(0,n.jsx)(a.p,{children:"There are many other levers one could pull, such as a unique approach to product or design, working on open-source projects, etc. But there has to be something. You can’t offer average/below-average pay, no interesting problems, no autonomy, and also have no unique approach to your technology, assuming you want to attract engineers that stand out. Pretty much every engineer that I’ve worked with that stands out amongst other engineers has something they care about or some unique approach to something that puts them ahead of other engineers (this is basically a tautology)."}),"\n",(0,n.jsx)(a.p,{children:"There are a variety of reasons why a company may lack a good engineering culture (or a culture at all). For example, smaller companies can often have engineers that aren’t experienced or thoughtful enough to make principled decisions, and just do whatever it takes to get the job done."}),"\n",(0,n.jsx)(a.p,{children:"On the contrary, I’ve actually worked at a company with experienced engineers that took pride in this extreme simplicity. They wanted to use the most tried and true technologies, in the same way everyone else does. And none of the other levers I mentioned were pulled either. Unfortunately in today’s world, I don’t think that works to attract engineering talent. Great engineers care about things that bring meaningful improvements to their life, whether that’s building a unique or standout skillset, new knowledge, higher pay, and/or autonomy. You can’t avoid offering all of these things and expect to hire capable talent. If I put your company on a map next to a bunch of other companies, why should anyone work for you over anyone else?"})]})},"/posts/stand-out-engineering-team",{filePath:"pages/posts/stand-out-engineering-team.md",timestamp:1729618604e3,pageMap:i.v,frontMatter:{title:"How to make an engineering team stand out",author:"Ani Ravi",date:"2024-10-16",tag:"Company, Startup, Engineering",description:"What many engineering teams seem to miss"},title:"How to make an engineering team stand out"},"undefined"==typeof RemoteContent?s:RemoteContent.useTOC)},9075:function(e,t,a){"use strict";a.d(t,{v:function(){return n}});let n=[{name:"index",route:"/",frontMatter:{type:"page",title:"Home"}},{name:"posts",route:"/posts",children:[{name:"an-underrated-part-of-using-graphql",route:"/posts/an-underrated-part-of-using-graphql",frontMatter:{title:"An underrated part of using GraphQL",author:"Ani Ravi",date:new Date(16760736e5),tag:"Programming, GraphQL, Libraries",description:"Consistent naming."}},{name:"first-product-journey",route:"/posts/first-product-journey",frontMatter:{title:"The short-lived journey of our first product",author:"Ani Ravi",date:new Date(15821568e5),tag:"Pepper, Product, Startups",description:"The story of Pepper, our first app.",image:"/images/pepperlogo.png"}},{name:"index",route:"/posts",frontMatter:{type:"posts",title:"Posts"}},{name:"learning-graphql-through-postgraphile",route:"/posts/learning-graphql-through-postgraphile",frontMatter:{title:"Learning GraphQL through PostGraphile",author:"Ani Ravi",date:new Date(15971904e5),tag:"GraphQL, PostGraphile",description:"You will learn about SQL too"}},{name:"long-term-vs-short-term-career-choices",route:"/posts/long-term-vs-short-term-career-choices",frontMatter:{title:"Long-term vs short-term career choices",author:"Ani Ravi",date:new Date(17278272e5),tag:"Career, Life",description:"One potential path to long-term success"}},{name:"move-off-orms-in-typescript",route:"/posts/move-off-orms-in-typescript",frontMatter:{title:"Migrating away from query builders and ORMs in JavaScript and TypeScript",author:"Ani Ravi",date:new Date(159192e7),tag:"ORMs, JavaScript, TypeScript",description:"Alternatives"}},{name:"software-engineering-in-the-early-days-of-a-product",route:"/posts/software-engineering-in-the-early-days-of-a-product",frontMatter:{title:"Software engineering in the early days of a product",author:"Ani Ravi",date:new Date(16560288e5),tag:"Engineering, Technology",description:"Some things I've learned about building software in the early days of something new."}},{name:"special-about-haskell",route:"/posts/special-about-haskell",frontMatter:{title:"What’s special about Haskell?",author:"Ani Ravi",date:new Date(16162848e5),tag:"Haskell, Programming, Languages",description:"What’s special about Haskell if you can already program in another language?"}},{name:"stand-out-engineering-team",route:"/posts/stand-out-engineering-team",frontMatter:{title:"How to make an engineering team stand out",author:"Ani Ravi",date:new Date(17290368e5),tag:"Company, Startup, Engineering",description:"What many engineering teams seem to miss"}},{name:"starting-a-company",route:"/posts/starting-a-company",frontMatter:{title:"Musings on starting a company",author:"Ani Ravi",date:new Date(17278272e5),tag:"Company, Startup",description:"When to start a company"}},{name:"the-future-of-typescript",route:"/posts/the-future-of-typescript",frontMatter:{title:"The future of TypeScript",author:"Ani Ravi",date:new Date(16760736e5),tag:"TypeScript, Programming, Effect, Functional, Libraries",description:"This set of libraries will revolutionize how we write TypeScript."}},{name:"the-incredible-irony-of-dynamically-typed-languages",route:"/posts/the-incredible-irony-of-dynamically-typed-languages",frontMatter:{title:"The incredible irony of dynamically-typed languages",author:"Ani Ravi",date:new Date(16206912e5),tag:"Programming, Types, Languages, Dynamic",description:"Dynamically-typed programming sucks in a real, production codebase. Or anything with more than 10 lines of code."}},{name:"toy-project-not-ready-for-production",route:"/posts/toy-project-not-ready-for-production",frontMatter:{title:"Your toy project is not ready for production",author:"Ani Ravi",date:new Date(15865632e5),tag:"Toys, Project, Production, Development",description:"Tales of a developer."}},{name:"understanding-users-is-actually-difficult",route:"/posts/understanding-users-is-actually-difficult",frontMatter:{title:"Understanding users is actually difficult",author:"Ani Ravi",date:new Date(16470432e5),tag:"Startups, Users",description:"Building software is easier nowadays - figuring out what software to build is tough."}},{name:"using-elixir-in-production-at-a-small-startup",route:"/posts/using-elixir-in-production-at-a-small-startup",frontMatter:{title:"Some reflections on using elixir in production at a small startup",author:"Ani Ravi",date:new Date(16469568e5),tag:"Elixir, Programming Languages",description:"Using Elixir in production"}},{name:"why-i-bought-a-framework-laptop",route:"/posts/why-i-bought-a-framework-laptop",frontMatter:{title:"Why I bought a Framework laptop",author:"Ani Ravi",date:new Date(16374528e5),tag:"Passion",description:"A company that deserves to exist."}},{name:"working-on-things-that-are-fun-but-dont-matter",route:"/posts/working-on-things-that-are-fun-but-dont-matter",frontMatter:{title:"Working on things that are fun, but don’t matter",author:"Ani Ravi",date:new Date(15964992e5),tag:"Work, Passion",description:"Not everything is worth working on."}},{name:"your-database-is-all-your-are",route:"/posts/your-database-is-all-your-are",frontMatter:{title:"Your database is all you are",author:"Ani Ravi",date:new Date(16162848e5),tag:"PostgreSQL, Databases",description:"Get serious about your data"}}]},{name:"tags",route:"/tags",children:[]}]}},function(e){e.O(0,[131,888,774,179],function(){return e(e.s=2965)}),_N_E=e.O()}]);