1:"$Sreact.fragment"
3:I[8387,[],""]
4:I[1007,[],""]
5:I[3321,["107","static/chunks/107-2bf9ce27aa94b918.js","779","static/chunks/app/posts/special-about-haskell/page-d0cfb696f2f275cf.js"],"Link"]
6:I[7548,["107","static/chunks/107-2bf9ce27aa94b918.js","779","static/chunks/app/posts/special-about-haskell/page-d0cfb696f2f275cf.js"],"GoBack"]
7:I[3809,[],"OutletBoundary"]
a:I[751,[],"AsyncMetadataOutlet"]
c:I[3809,[],"ViewportBoundary"]
e:I[3809,[],"MetadataBoundary"]
10:I[1254,[],""]
:HL["/_next/static/css/e7579b16c1ac41a4.css","style"]
0:{"P":null,"b":"K1b4-8dicnSzwg-76EwSv","p":"","c":["","posts","special-about-haskell"],"i":false,"f":[[["",{"children":["posts",{"children":["special-about-haskell",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e7579b16c1ac41a4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],"$L2"]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["special-about-haskell",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"What’s special about Haskell?"}],["$","div",null,{"className":"x:mb-8 x:flex x:gap-3 x:items-center","children":[["$","div",null,{"className":"x:grow x:dark:text-gray-400 x:text-gray-600","children":[["$","div",null,{"className":"x:flex x:flex-wrap x:items-center x:gap-1","children":["Ani Ravi",",",["$","time",null,{"dateTime":"2021-03-21T00:00:00.000Z","children":"3/21/2021"}],["$","span",null,{"className":"x:px-1","children":"•"}],[["$","$L5","Haskell",{"href":"/tags/Haskell","className":"nextra-tag","children":"Haskell"}],["$","$L5","Programming",{"href":"/tags/Programming","className":"nextra-tag","children":"Programming"}],["$","$L5","Languages",{"href":"/tags/Languages","className":"nextra-tag","children":"Languages"}]]]}],"$undefined"]}],["$","$L6",null,{}]]}],[["$","p",null,{"children":"I started programming by learning Java. After taking a break from learning programming, I jumped into web development by learning JavaScript. Unsatisfied, I eventually moved to TypeScript. I’ve seen a little bit of what a few different languages have to offer and have dabbled in some others not mentioned here."}],"\n",["$","p",null,{"children":["So what’s special about ",["$","a",null,{"href":"https://www.haskell.org/","target":"_blank","rel":"noreferrer","children":["Haskell",[" ",["$","svg",null,{"fill":"none","stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":1.7,"viewBox":"0 0 24 24","height":"1em","className":"x:inline x:align-baseline x:shrink-0","children":[["$","path",null,{"d":"M7 17L17 7"}],["$","path",null,{"d":"M7 7h10v10"}]]}]]],"className":"x:focus-visible:nextra-focus"}],"?"]}],"\n",["$","p",null,{"children":["I didn’t know anything about functional programming until about a year and a half ago — I had no idea that the things I liked most about programming actually came from functional programming. I was later introduced to ",["$","a",null,{"href":"https://reasonml.github.io/","target":"_blank","rel":"noreferrer","children":["ReasonML",[" ",["$","svg",null,{"fill":"none","stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":1.7,"viewBox":"0 0 24 24","height":"1em","className":"x:inline x:align-baseline x:shrink-0","children":[["$","path",null,{"d":"M7 17L17 7"}],["$","path",null,{"d":"M7 7h10v10"}]]}]]],"className":"x:focus-visible:nextra-focus"}]," and eventually found Haskell."]}],"\n",["$","p",null,{"children":"Haskell seemed like a mysterious beast at first. I didn’t understand the syntax at all, and it looked different from any other language I had used. It seemed hard to read. Looking back, the things I found so confusing make so much sense, and I only found it so hard to read even basic code simply because I was unfamiliar, not because there was anything inherently difficult to understand."}],"\n",["$","p",null,{"children":"One effect of learning Haskell is that it completely changes the way you think about writing programs, coming from a background like mine. This also means that there will be a greater learning curve, and it’s unlikely you’ll make the leap unless you’re forced to or you’re interested in learning it in the first place. I have had a hard time convincing people as to why you should learn it, also due to the fact I am still a complete beginner."}],"\n",["$","p",null,{"children":"The most novel things that blew my mind coming from other languages were:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Way more sophisticated type inference. It repeatedly demonstrates to you that types are not just for error checking as is a common misconception and reductive view of the real power of type systems. Types are meant to be ",["$","a",null,{"href":"https://blog.poisson.chat/posts/2021-03-17-what-is-a-type.html","target":"_blank","rel":"noreferrer","children":["composable specifications",[" ",["$","svg",null,{"fill":"none","stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":1.7,"viewBox":"0 0 24 24","height":"1em","className":"x:inline x:align-baseline x:shrink-0","children":[["$","path",null,{"d":"M7 17L17 7"}],["$","path",null,{"d":"M7 7h10v10"}]]}]]],"className":"x:focus-visible:nextra-focus"}]," to help you model your programs. Good types make refactoring fearless, as your application grows in size and you will be making changes often. The more of your domain that you can model in the type system, the more the compiler can help you make sure you’re doing what you told it you would. It’s a conversation between you and your compiler."]}],"\n",["$","li",null,{"children":"Ability for the type system to track things that are side effects vs pure functions. A pure function is a function that only does what it needs to do with its inputs and returns back the same output given the same input (like in math!). For example, an add function that adds two numbers will take two numbers and return the addition of those two numbers, nothing else. If it did a side effect, it might do something like try to log to the console or send an email before adding the two numbers. In Haskell, you cannot just send an email inside of a pure function without changing the type of the entire function to indicate a side effect will be performed. By isolating the pure from the impure, it’s easier for you, the programmer, to understand what your code is doing (or intending to do)."}],"\n",["$","li",null,{"children":"Concise code, and robust abstractions (aka tools for you, the programmer to use) built on mathematical foundations. Haskell gives you a new set of building blocks and primitives upon which to build your programs, many of which are not the same as the ones you may be very comfortable using in other languages, such as for loops. Haskell has its warts, but many of the ideas you’ll encounter even simply by starting to learn the language have been built with rigor and decades of research."}],"\n"]}],"\n",["$","p",null,{"children":"What’s most important about number 3 is that any living codebase will increase in complexity, even if it doesn’t grow in size (aka lines of code). To be able to manage this well, you need the right tools."}],"\n",["$","p",null,{"children":"Something I find to be a big problem in programming is we’ve taught programmers to expect immediate results and immediate positive feedback from starting a new project."}],"\n",["$","p",null,{"children":["$","em",null,{"children":"“You mean I can’t spin up a production project in 5 minutes??”"}]}],"\n",["$","p",null,{"children":"Haskell is one of those things you learn because you are willing to pay the upfront cost to have an easier time managing complexity down the road. Just because something looks easy right now doesn’t mean it will be easy as your project grows. There is always a cost. Haskell pushes more of the costs upfront (making you reason about types, new things to learn) instead of giving you the easiest possible onboarding and leaving you to think that the tools are powerful enough to grow with you as your project grows. We have a job as programmers to use the best tools at our disposal to build the most reliable programs."}],"\n",["$","p",null,{"children":[["$","em",null,{"children":"If you are looking for a batteries-included dive into Haskell web development though, check out"}]," ",["$","a",null,{"href":"https://ihp.digitallyinduced.com/","target":"_blank","rel":"noreferrer","children":[["$","em",null,{"children":"IHP"}],false],"className":"x:focus-visible:nextra-focus"}],["$","em",null,{"children":"!"}]]}],"\n",["$","p",null,{"children":"Nothing I’ve mentioned thus far is what I’ve found most compelling about this language. So what’s special about it?"}],"\n",["$","p",null,{"children":["Haskell is the first language I’ve learned that makes you reason about ",["$","em",null,{"children":"what code means"}],", not ",["$","em",null,{"children":"what it does"}],". Whenever I learned how to code, I always wanted to do some set of actions to accomplish a particular goal. When I wanted to learn how to put stuff in a database, I learned the basics of whatever tool I needed to insert data into a database. When I needed to render something on the UI, I learned a frontend framework to make UIs."]}],"\n",["$","p",null,{"children":["For the first time in my life, a language has made me interested in programming in itself — to reason about code at a higher-level and learn how to use the vast array of tools available in Haskell to express your constraints and domain. Things I would’ve never been interested in learning before learning Haskell (e.g. something like ",["$","a",null,{"href":"https://github.com/hmemcpy/milewski-ctfp-pdf","target":"_blank","rel":"noreferrer","children":["category theory",[" ",["$","svg",null,{"fill":"none","stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":1.7,"viewBox":"0 0 24 24","height":"1em","className":"x:inline x:align-baseline x:shrink-0","children":[["$","path",null,{"d":"M7 17L17 7"}],["$","path",null,{"d":"M7 7h10v10"}]]}]]],"className":"x:focus-visible:nextra-focus"}],") are now suddenly interesting because it underlies a rich history of ideas that you can use to write concise, robust, maintainable, understandable, and composable code. Composable meaning that you can build one lego block of your program at a time, and put them together nicely with the tools afforded to you by the language. The building blocks can look simple at first, just like they often can in math, but how you put them together makes all the difference."]}],"\n",["$","p",null,{"children":"I’m still a beginner at Haskell. I’ve barely touched the surface, and am just dipping my toes into writing some actual programs with it outside of my day job. I worry I will never be able to enjoy “regular” programming again, however, I feel like I’m already getting to that point. If you are interested at all in expanding your mind as a programmer, and being able to learn lots of good ideas to improve your programming skills overall, learn some Haskell. It turns out a lot of the cool things you learn in Haskell help you write better code in most languages you will use nowadays because you aren’t only learning a new language, but also learning new ways to think. Haskell is often at the edge of programming language research — the capabilities you see in Haskell are eventually picked up by more mainstream languages."}]]],null,["$","$L7",null,{"children":["$L8","$L9",["$","$La",null,{"promise":"$@b"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","sFRT6Bb6rjiM0subDZH66v",{"children":[["$","$Lc",null,{"children":"$Ld"}],null]}],["$","$Le",null,{"children":"$Lf"}]]}],false]],"m":"$undefined","G":["$10","$undefined"],"s":false,"S":true}
11:"$Sreact.suspense"
12:I[751,[],"AsyncMetadata"]
f:["$","div",null,{"hidden":true,"children":["$","$11",null,{"fallback":null,"children":["$","$L12",null,{"promise":"$@13"}]}]}]
9:null
14:I[4065,["107","static/chunks/107-2bf9ce27aa94b918.js","530","static/chunks/app/posts/page-606605ec92ad21e7.js"],"ThemeProvider"]
15:I[3321,["107","static/chunks/107-2bf9ce27aa94b918.js","779","static/chunks/app/posts/special-about-haskell/page-d0cfb696f2f275cf.js"],"ViewTransitions"]
16:I[447,["107","static/chunks/107-2bf9ce27aa94b918.js","530","static/chunks/app/posts/page-606605ec92ad21e7.js"],"NavbarLink"]
17:I[165,["107","static/chunks/107-2bf9ce27aa94b918.js","530","static/chunks/app/posts/page-606605ec92ad21e7.js"],"ThemeSwitch"]
18:I[7645,["618","static/chunks/2c7d8ac5-5467529777a2b257.js","107","static/chunks/107-2bf9ce27aa94b918.js","327","static/chunks/327-3185d34a21f3f70b.js","177","static/chunks/app/layout-f009858b52102c94.js"],"Search"]
2:["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"alternate","type":"application/rss+xml","title":"RSS","href":"/feed.xml"}],["$","style",null,{"children":":root {\n  --nextra-primary-hue: 212deg;\n  --nextra-primary-saturation: 100%;\n  --nextra-primary-lightness: 45%;\n  --nextra-bg: 250,250,250;\n  --nextra-content-width: 90rem;\n}\n.dark {\n  --nextra-primary-hue: 204deg;\n  --nextra-primary-saturation: 100%;\n  --nextra-primary-lightness: 55%;\n  --nextra-bg: 17,17,17;\n}\n::selection {\n  background: hsla(var(--nextra-primary-hue),var(--nextra-primary-saturation),var(--nextra-primary-lightness),.3);\n}\nhtml {\n  background: rgb(var(--nextra-bg));\n}"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: light)","content":"rgb(250,250,250)"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: dark)","content":"rgb(17,17,17)"}],"$undefined"]}],["$","body",null,{"children":["$","$L14",null,{"attribute":"class","children":["$undefined",["$","article",null,{"className":"x:container x:px-4 x:prose x:max-md:prose-sm x:dark:prose-invert","dir":"ltr","data-pagefind-body":true,"children":["$","$L15",null,{"children":[["$","header",null,{"className":"x:mb-8 x:flex x:items-center x:gap-3 x:justify-end","data-pagefind-ignore":"all","children":[[["$","$L16","/",{"href":"/","children":"Home"}],["$","$L16","/posts",{"href":"/posts","children":"Posts"}]],[[["$","a","rss",{"href":"/feed.xml","children":"RSS"}],["$","a","github",{"href":"https://github.com/aniravi24","children":"Github"}]],["$","$L17",null,{}],["$","$L18",null,{"placeholder":"Search..."}]]]}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","small",null,{"className":"x:mt-32 x:block","data-pagefind-ignore":"all","children":["$","div",null,{"className":"my-4 border-t-2 mx-auto flex items-center sm:flex-row flex-col","children":["$","p",null,{"className":"text-sm text-gray-500","children":"Ani Ravi"}]}]}]]}]}]]}]}]]}]
d:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","2",{"name":"theme-color","content":"#ffffff"}]]
8:null
b:{"metadata":[["$","title","0",{"children":"What’s special about Haskell?"}],["$","meta","1",{"name":"description","content":"What’s special about Haskell if you can already program in another language?"}],["$","link","2",{"rel":"manifest","href":"/manifest.json","crossOrigin":"$undefined"}],["$","meta","3",{"name":"robots","content":"index, follow"}],["$","meta","4",{"name":"msapplication-TileColor","content":"#da532c"}],["$","link","5",{"rel":"icon","href":"/favicon-16.png","sizes":"16x16","type":"image/png"}],["$","link","6",{"rel":"icon","href":"/favicon-32.png","sizes":"32x32","type":"image/png"}],["$","link","7",{"rel":"icon","href":"/favicon-48.png","sizes":"48x48","type":"image/png"}],["$","link","8",{"rel":"apple-touch-icon","href":"/apple-touch-icon.png","sizes":"180x180","type":"image/png"}]],"error":null,"digest":"$undefined"}
13:{"metadata":"$b:metadata","error":null,"digest":"$undefined"}
